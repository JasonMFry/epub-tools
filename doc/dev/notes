-----
sample syntax for formatting rules

mag_aeon
   titlePat "^A[eE]on ([^ ]+)$"
   name "AeonMagazine(wordNum 2 1)"

mag_analog
   titlePat "^(A[^ ]*).*, ([^ ]+) ([0-9]{4})$"
   name "(scrub 1)SF(3)-(monthNum 2)"

mag_apex
   titlePat "^(Apex)[^0-9]*([0-9]+)$"
   name "(scrub 1)Magazine(pad 3 2)"

mag_bcs
   titlePat "(Beneath Ceaseless.*) #([0-9]+).*"
   name "(scrub 1)_Issue(pad 3 2)"

mag_blackstatic
   titlePat "^(Black Static Horror Magazine)[^0-9]*([0-9]+)$"
   name "(scrub 1)(pad 2 2)"

mag_challDest
   titlePat "^(Challenging Destiny) #([0-9]+).*"
   name "(scrub 1)Magazine(pad 3 2)"

mag_gud
   authorMatch "GUD Magazine Authors"
   titlePat ".* Magazine Issue ([0-9]+) ::.*"
   name "GUDMagazine(pad 2 1)

ordinary_book
   titlePat "(.*)"
   name "(authors)-(scrub 1)_(year)"


scrub does this:
   ',\?();#â€™]*!"  ->  removed altogether
   .-             ->  " "
   :              ->  "_"
   [              ->  "_ "
   &              ->  " And "
   And then everything that remains is CamelCased like this:
      "camel McCase" -> "CamelMccase"


DSL consists of:

   commands:
      authorMatch First (or only) author must match this regexp
         [Should this match any of the authors in the MD? If it did, we could have multiple authorMatch actions in the rule, which is possibly useful]
      titlePat    Regexp to split apart title, use captures
      name        File name builder pattern

   replacement functions:
      authors            Author(s)
      monthNum IDX       Turn English month name(s) into a digit string
                           ex: "Jan" -> "01"
                               "February" -> "02"
                               "Sep/Oct" -> "09_10"
      pad WIDTH IDX      Pad a number with zeroes
      scrub IDX          Scrub all undesireable characters out of a string
      wordNum WIDTH IDX  Turn English number word into a digit string
      year               Publication year (from the metadata)


-----
This project may benefit from the use of some other tools out here
such as epubcheck, zip and unzip

- Tools unzipping can try to fall back on unzip upon failure

- epubmeta needs write capability

- epub creation, think about this

- always release Windows binaries

- OSX too?
